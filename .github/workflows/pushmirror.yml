name: 42sh

on:
  push:
    branches:
      - main

env:
  MIRROR_SSH: "git@github.com:EpitechPromo2028/B-PSU-200-REN-2-1-42sh-elie.stroun.git"
  MIRROR_URL: "git://github.com/EpitechPromo2028/B-PSU-200-REN-2-1-42sh-elie.stroun.git"
  EXECUTABLES: "42sh"

jobs:
  check_mirror_repo:
    name: Checking if in mirror repository
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository using checkout@v4
        uses: actions/checkout@v4
      - name: Check if in mirror repository
        id: check_mirror
        run: |
          if [ "${{ github.repositoryUrl }}" == "${{ env.MIRROR_URL }}" ]; then
            echo "Repository URLs match. Skipping further execution."
            exit 1
          fi

  check_coding_style:
    name: Checking coding style with epitech github
    container: ghcr.io/epitech/coding-style-checker:latest
    runs-on: ubuntu-latest
    needs: check_mirror_repo
    steps:
      - name: Checkout repository using checkout@v4
        uses: actions/checkout@v4

      - name: Run coding style checker
        run: check.sh $(pwd) $(pwd)
        
      - name: Create annotation for coding-style errors
        run: |
          input=coding-style-reports.log
          while IFS= read -r -a line; do
            fields=($(printf "%s" "$line"|cut -d':' --output-delimiter=' ' -f1-))
            echo "::error title=${fields[2]} coding style error,file=${fields[0]},line=${fields[1]}::${fields[3]}"
          done < $input
      - name: Report banana result
        run: |
          NB_ERROR=$(cat coding-style-reports.log | wc -l)
          if [ $NB_ERROR -gt 0 ]; then
            exit 1
          fi

  check_program_compilation:
    name: checking program compilation using make
    runs-on: ubuntu-latest
    timeout-minutes: 2
    container: epitechcontent/epitest-docker:latest
    needs: check_coding_style
    steps:
      - name: Checkout repository using checkoutv4
        uses: actions/checkout@v4

      - name: Launch make
        run: make

      - name: Clean repository with make clean
        run: make clean

      - name: Verify if their is all the executables
        run: |
          IFS=',' read -ra EXECUTABLES_ARRAY <<< "$EXECUTABLES"
          for executable in "${EXECUTABLES_ARRAY[@]}"; do
            if [ ! -x "$executable" ]; then
              echo "Error: $executable does not exist or is not executable"
              exit 1
            fi
          done

  run_tests:
    name: Running tests with make run test
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: check_program_compilation
    container: epitechcontent/epitest-docker:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run Tests with make tests_run
        run: |
          pwd
          ls
          make tests_run
          cat output.txt
          if grep -wq 'KO' output.txt; then
            echo "Tests failed. Exiting with code 1."
            exit 1
          else
            echo "Tests passed."
          fi

  push_to_mirror:
    name: Pushing to mirror repository with push command
    runs-on: ubuntu-latest
    needs:  run_tests
    if: github.event_name == 'push'
    steps:
      - name: Checkout Repository with checkoutv4
        with:
          fetch-depth: 0
        uses: actions/checkout@v4

      - name: Push to mirror
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.MIRROR_SSH }}
          ssh_private_key:
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}